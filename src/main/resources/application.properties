spring.profiles.active=prod
#spring.profiles.active=local

kafka.servers=localhost:9092

json.serdes=sean.kafka_streams_poc.serdes.JSONSerde

sef.name=bbg

streams.application.id=${sef.name}-approval-cache-processor

topic.approved=${sef.name}-approved
topic.invalid=${topic.approved}-invalid
topic.cancel=${sef.name}-cancel
topic.cache=cache-operations
store.name=approval-cache

# recommended additional streams config, see
#   https://kafka.apache.org/documentation/streams/developer-guide/config-streams.html#recommended-configuration-parameters-for-resiliency
streamsProps={\
    'application.id'       : '${streams.application.id}', \
    'bootstrap.servers'    : '${kafka.servers}', \
    'state.dir'            : '${user.home}/tmp/kafka-streams', \
    'processing.guarantee' : 'exactly_once_beta', \
    'default.key.serde'    : '${json.serdes}', \
    'default.value.serde'  : 'io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde', \
    'default.deserialization.exception.handler' : 'org.apache.kafka.streams.errors.LogAndContinueExceptionHandler', \
    'default.production.exception.handler'      : 'sean.kafka_streams_poc.streams.exception.handler.ProductionLogAndContinueExceptionHandler', \
    'task.timeout.ms'      : '10000', \
    'schema.registry.url' : 'http://localhost:8081' \
   }

producerProps={\
    'client.id'          : '${topic.cache}-direct', \
    'bootstrap.servers'  : '${kafka.servers}', \
    'enable.idempotence' : 'true', \
    'key.serializer'     : '${json.serdes}', \
    'value.serializer'   : 'io.confluent.kafka.serializers.KafkaAvroSerializer', \
    'schema.registry.url' : 'http://localhost:8081' \
   }
